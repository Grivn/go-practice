<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="BranchesTreeState">
    <expand>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="LOCAL_ROOT" type="e8cecc67:BranchNodeDescriptor" />
      </path>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
      </path>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="GROUP_NODE:origin" type="e8cecc67:BranchNodeDescriptor" />
      </path>
    </expand>
    <select />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="1d7c2be1-3089-483b-8ca0-61f24e8c197f" name="Default Changelist" comment="# feat: 新功能&#10;# fix: 修复 bug&#10;# docs: 修改了注释、文档等说明文件&#10;# style: 不影响代码功能的修改，例如代码风格，空格、空行、分号等&#10;# refactor: 重构 （既不是 feat，也不是 fix）&#10;# test: 修改测试相关代码，如测试用例等&#10;# chore: 修改项目维护相关的文件，例如编译脚本，文档生成脚本等&#10;# revert: 提交 revert">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/errmsg/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/errmsg/main.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/local/opt/go/libexec" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="true" />
    <option name="urls">
      <list>
        <option value="file://$PROJECT_DIR$/../../../.." />
      </list>
    </option>
    <option name="useGoPathFromSystemEnvironment" value="false" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/bls/bls_test.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/ed25519/crypto_test.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/fetchtimer/main.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/go.mod" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/heap/main.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/howtoinit/main.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/howtoinit/pkga/a.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/howtoinit/pkgb/b.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/ifswitch/main.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/jiukun/main.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/jsonfile/main.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/jsonfile/out.json" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/jsonmap/input" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/jsonmap/jsonmap.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/jsonmap/main.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/jsonmap/output" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/jsonreplacer/main.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/jsontesttools/json.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/logrus/rus_test.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/loop/main.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/maplist/maplist_test.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/maps/maps_test.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/metrics/main.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/slice/slice_test.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/sort/sort_test.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/statusmanager/interface.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/switchcase/main.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/testpanic/main.go" root0="FORCE_HIGHLIGHTING" />
    <setting file="file:///usr/local/opt/go/libexec/src/encoding/json/decode.go" root0="SKIP_INSPECTION" />
    <setting file="file:///usr/local/opt/go/libexec/src/encoding/json/encode.go" root0="SKIP_INSPECTION" />
    <setting file="file:///usr/local/opt/go/libexec/src/io/ioutil/ioutil.go" root0="SKIP_INSPECTION" />
    <setting file="file:///usr/local/opt/go/libexec/src/net/http/client.go" root0="SKIP_INSPECTION" />
    <setting file="file:///usr/local/opt/go/libexec/src/net/http/response.go" root0="SKIP_INSPECTION" />
    <setting file="file:///usr/local/opt/go/libexec/src/os/file.go" root0="SKIP_INSPECTION" />
  </component>
  <component name="MacroExpansionManager">
    <option name="directoryName" value="jfjx1w0g" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="1pGxxFbZSu1zZxSXNK02yRYk0UQ" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.format.on.save.advertiser.fired&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/bytedance/go/src/github.com/Grivn/go-practice&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/peer" />
      <recent name="$PROJECT_DIR$/config" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
    </key>
  </component>
  <component name="RunManager" selected="Go Build.go build github.com/Grivn/go-practice/errmsg">
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="go-practice" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <kind value="PACKAGE" />
      <package value="github.com/Girvn/go-practice" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="go build github.com/Grivn/go-practice/concurrentmap" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="go-practice" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/Grivn/go-practice/concurrentmap" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/concurrentmap/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build github.com/Grivn/go-practice/cosmostests/cosmos2" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="go-practice" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/Grivn/go-practice/cosmostests/cosmos2" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/cosmostests/cosmos2/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build github.com/Grivn/go-practice/errmsg" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="go-practice" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/Grivn/go-practice/errmsg" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/errmsg/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build github.com/Grivn/go-practice/marshal" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="go-practice" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/Grivn/go-practice/marshal" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/marshal/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="TestMapString in github.com/Grivn/go-practice/maps" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="go-practice" />
      <working_directory value="$PROJECT_DIR$/maps" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/Grivn/go-practice/maps" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestMapString\E$" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="go-practice" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <kind value="DIRECTORY" />
      <package value="github.com/Girvn/go-practice" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build github.com/Grivn/go-practice/errmsg" />
        <item itemvalue="Go Test.TestMapString in github.com/Grivn/go-practice/maps" />
        <item itemvalue="Go Build.go build github.com/Grivn/go-practice/marshal" />
        <item itemvalue="Go Build.go build github.com/Grivn/go-practice/concurrentmap" />
        <item itemvalue="Go Build.go build github.com/Grivn/go-practice/cosmostests/cosmos2" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <environment>
      <map>
        <entry key="GOPROXY" value="https://goproxy.io" />
      </map>
    </environment>
    <settings-migrated>true</settings-migrated>
  </component>
</project>